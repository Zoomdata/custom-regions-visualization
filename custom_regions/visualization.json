{"templateType":"US_MAP","name":"Custom Regions","accountId":"55c8ddece4b0c48bf6ac5fe0","enabled":true,"type":"CUSTOM","components":[{"id":"57eacf45e4b0e93dcc7da152","name":"CustomRegionsMap.js","type":"text/javascript","visualizationId":"57eacf45e4b0e93dcc7da150","body":"/*\n * Copyright (C) Zoomdata, Inc. 2012-2016. All rights reserved.\n */\n/* global controller */\n\n(function() {\nvar userVariables = {};\n//Set the initial map extent.  This is what part of the world will be shown\n//when the user first opens the visualization.  The extent consists of a \n//center point lat/lon and a zoom level.  Zoom level is an integer between 0 and X, where\n//0 is the whole world and X is the most detailed level as defined by the tile layer selected\n//Some examples:\n// United States (contiguous): \nuserVariables.initialExtent = {centerPoint: {lat:37.8, lon:-96}, zoomLevel: 4};\n// Europe: \n//userVariables.initialExtent = {centerPoint: {lat:53.87, lon:15.55}, zoomLevel: 4};\n// Australia:\n//userVariables.initialExtent = {centerPoint: {lat: -25.08, lon: 134.26}, zoomLevel: 4};\n\n\n//Specify the tile layer to show in the background of the map using either the\n//provider from leaflet-extras or by setting the parameters yourself\n\n//Using leaflet provider, as described at https://github.com/leaflet-extras/leaflet-providers\nuserVariables.tileLayer = L.tileLayer.provider('OpenStreetMap.BlackAndWhite');\n\n//Example setting the parameters manually, in this case for OpenStreetMap Mapnik\n//userVariables.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//\tmaxZoom: 19,\n//\tattribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n//});\n\n//Load and configure the regions to use for data display.  Regions must be in \n//GeoJSON format.  Multiple regions can be set to show data at different zoom\n//levels with different join fields.  This array must contain at least one element.\nuserVariables.regionsConfig = [{\n    //The geoJSON containing the regions.  You _could_ put the whole geoJSON payload\n    //here, but that might make things a bit difficult to read\n    regionData: test_region_level1,\n    //The chart needs 2 fields to render the data.  First, the field in the data\n    //source containing the region name/id\n    groupName: 'region_name1',\n    //next, the name of the field in the geoJSON containing the same name/id\n    regionField: 'name_1',\n    //optionally you can set the min/max zoom levels for this layer\n    //minZoomLevel not set, so will be shown out to global\n    //if zoom levels overlap only the first one hit will be shown\n    maxZoomLevel: 4 //won't show when zoomed in past level 10\n},{\n    regionData: test_region_level2,\n    groupName: 'region_name2',\n    regionField: 'name_2',\n    minZoomLevel: 5,\n    maxZoomLevel: 7\n},{\n    regionData: test_region_level3,\n    groupName: 'region_name3',\n    regionField: 'name_3',\n    minZoomLevel: 8\n    //maxZoomLevel not set, so will be shown all the way to most detailed\n}];\n\n/*\n****************\nEnd User Customization Section\nEverything from here down is visualization logic\n****************\n*/\n\nvar dataLookup = {}; //this will contain the results from Zoomdata\n\n// create a div for the map and add the leaflet map\nvar uuid = new Date().getTime();\nvar mapId = 'map-' + uuid;\n\nvar div = $(controller.element).append('<div id=\"' + mapId +\n'\" style=\"width:100%; height:100%\" />').find(mapId).first();\n\n$(div).addClass('map');\n\nif(map !== undefined) {console.log('Map exists ', map);}\nvar map = L.map('map-' + uuid).setView(userVariables.initialExtent.centerPoint,\n                                       userVariables.initialExtent.zoomLevel);\n\nuserVariables.tileLayer.addTo(map);\n\n// Used when the view changes (zooming) to detect what region set to use\nfunction regionInZoomRange(region) {\n    var result = false;\n    var zoomLevel = map.getZoom();\n    var minZoomLevel = region.minZoomLevel || 0;\n    var maxZoomLevel = region.maxZoomLevel || 18; //18 is the default max zoom for leaflet TileLayer\n    if(zoomLevel >= minZoomLevel && zoomLevel <= maxZoomLevel) {\n        result = true;\n    }\n    return(result);\n}\n\n// Given a zoom level set the currently visible layer\n//and associated grouping in Zoomdata query\n//TODO: filtering based on parent layer in view, like we do with states\nfunction setCurrentLayer() {\n    userVariables.regionsConfig.forEach(function(currRegion) {\n        if(regionInZoomRange(currRegion)) {\n            currRegion.visible = true;\n            currRegion.mapLayer.addTo(map);\n            var currGroup = controller.dataAccessors.region.getGroup();\n            currGroup.name = currRegion.groupName;\n            currGroup.limit = currRegion.regionData.features.length;\n            controller.dataAccessors.region.setGroup((currRegion.groupName, currGroup));\n        } else {\n            map.removeLayer(currRegion.mapLayer);\n            currRegion.visible = false;\n        }\n    });\n}\n\nfunction getVisibleLayer() {\n    var result = userVariables.regionsConfig.find(function(currRegion) {\n        if(currRegion.visible === undefined) {\n            return false;\n        }\n        return currRegion.visible;\n    });\n    return result;\n}\n\nfunction getMetrics()  {\n    var dataAccessors = controller.dataAccessors;\n    var metrics = {};\n\n    _.forOwn(dataAccessors, function(value, key) {\n        if (value.TYPE === value.TYPES.METRIC ||\n            value.TYPE === value.TYPES.MULTI_METRIC) {\n            metrics[key] = value;\n        }\n    });\n\n    return metrics;\n}\n\nfunction style(feature) {\n    var id;\n    var fillColor = 'rgb(245,245,245)'; //default to light grey\n\n    //Figure out which variable to use for the rendering\n    for(var i=0; i < userVariables.regionsConfig.length; i++) {\n        currRegion = userVariables.regionsConfig[i];\n        if(feature.properties[currRegion.regionField] !== undefined) {\n            id = feature.properties[currRegion.regionField];\n            break;\n        }\n    }\n\n    if (dataLookup && id in dataLookup) {\n        fillColor = getMetrics().Color.color(dataLookup[id]);\n    }\n\n    return {\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.7,\n        fillColor: fillColor\n    };\n}\n\nfunction createCustomRegionLayers(customRegions, map, style) {\n    customRegions.forEach(function(region) {\n        region.mapLayer = L.geoJson(region.regionData, {\n            style: style,\n            onEachFeature: onEachFeature\n        });\n    });\n}\n\ncreateCustomRegionLayers(userVariables.regionsConfig, map, style);\nsetCurrentLayer();\n\nmap.on('moveend', function(e) {\n    //console.log('map moved, ', e);\n});\n\nmap.on('zoomend', function(e) {\n    setCurrentLayer();\n});\n\nfunction highlightFeature(e) {\n    var layer = e.target;\n    var feature = e.target.feature;\n    layer.setStyle({\n        weight: 5,\n        color: '#666',\n        dashArray: '',\n        fillOpacity: 0.7\n    });\n\n    if (!L.Browser.ie && !L.Browser.opera) {\n        layer.bringToFront();\n    }\n\n    currRegion = getVisibleLayer();\n    featureId = feature.properties[currRegion.regionField];\n    if (!(featureId in dataLookup)) {\n        return;\n    }\n\n    var data = dataLookup[featureId];\n    controller.tooltip.show({\n        event: e.originalEvent,\n        data: function() {\n            return data;\n        },\n        color: function() {\n            if (!(featureId in dataLookup)) {\n                return;\n            }\n            return getMetrics().Color.color(dataLookup[featureId]);\n        }\n    });\n}\n\nfunction resetHighlight(e) {\n    getVisibleLayer().mapLayer.resetStyle(e.target);\n    controller.tooltip.hide();\n}\n\nfunction featureDetails(e) {\n    var feature = e.target.feature;\n\n    if (!(currRegion.regionField in dataLookup)) {\n        return;\n    }\n\n    controller.menu.show({\n        event: e.originalEvent,\n        data: function() {\n            return dataLookup[currRegion.regionField];\n        }\n    });\n}\n\nfunction onEachFeature(feature, layer) {\n    layer.on({\n        mousemove: highlightFeature,\n        mouseout: resetHighlight,\n        click: featureDetails\n    });\n}\n\n// Functions specific to the Zoomdata custom visualization\ncontroller.selection = function(selected) {\n    if (selected) {\n        map.dragging.enable();\n        map.touchZoom.enable();\n        map.scrollWheelZoom.enable();\n        map.doubleClickZoom.enable();\n        map.boxZoom.enable();\n    } else {\n        map.dragging.disable();\n        map.touchZoom.disable();\n        map.scrollWheelZoom.disable();\n        map.doubleClickZoom.disable();\n        map.boxZoom.disable();\n    }\n};\n\ncontroller.update = function(data, progress) {\n    // Called when new data arrives\n    dataLookup = {};\n    for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        dataLookup[item.group] = item;\n    }\n\n    userVariables.regionsConfig.forEach(function(region) {\n        if(region.mapLayer !== undefined) {\n            region.mapLayer.setStyle(style);\n        }\n    });\n};\n\ncontroller.resize = function(width, height, size) {\n    // Called when the widget is resized\n    map.invalidateSize();\n};\n\ncontroller.createAxisLabel({\n    picks: 'Color',\n    orientation: 'horizontal',\n    position: 'bottom',\n    popoverTitle: 'Color'\n});\n}());\n","order":0,"uploadDate":"2016-09-27 19:57:57.885"},{"id":"57eacf45e4b0e93dcc7da153","name":"style.css","type":"text/css","visualizationId":"57eacf45e4b0e93dcc7da150","body":"/**\n * Copyright (C) Zoomdata, Inc. 2012-2016. All rights reserved.\n */\n.map {\n    width: 100%;\n    height: 100%;\n}\n\n.small text {\n    font-size:10px;\n}\n\n.medium text {\n    font-size: 12px;\n}\n\n.large text {\n    font-size:14px;\n}\n\n\n.info {\n    padding: 6px 8px;\n    font: 14px/16px Arial, Helvetica, sans-serif;\n    background: white;\n    background: rgba(255,255,255,0.8);\n    box-shadow: 0 0 15px rgba(0,0,0,0.2);\n    border-radius: 5px;\n    max-width: 221px;\n}\n.info h4 {\n    margin: 0 0 5px;\n    color: #777;\n}\n\n.legend {\n    text-align: left;\n    line-height: 18px;\n    color: #555;\n}\n.legend i {\n    width: 18px;\n    height: 18px;\n    float: left;\n    margin-right: 8px;\n    opacity: 0.7;\n}\n\n.leaflet-clickable {\n    -webkit-transition: fill 1s;\n    -moz-transition: fill 1s;\n    -ms-transition: fill 1s;\n    -o-transition: fill 1s;\n    transition: fill 1s;\n    opacity: 0.7;\n    filter:alpha(opacity=70);\n    filter: progid:DXImageTransform.Microsoft.Alpha(opacity=70);\n    -ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=70)\";\n\n}\n\n/* Leaflet.js required styles */\n\n.leaflet-map-pane,\n.leaflet-tile,\n.leaflet-marker-icon,\n.leaflet-marker-shadow,\n.leaflet-tile-pane,\n.leaflet-tile-container,\n.leaflet-overlay-pane,\n.leaflet-shadow-pane,\n.leaflet-marker-pane,\n.leaflet-popup-pane,\n.leaflet-overlay-pane svg,\n.leaflet-zoom-box,\n.leaflet-image-layer,\n.leaflet-layer {\n    position: absolute;\n    left: 0;\n    top: 0;\n}\n\n.leaflet-map-pane,\n.leaflet-tile-pane,\n.leaflet-layer,\n.leaflet-tile-container {\n    overflow: visible;\n}\n\n.leaflet-container {\n    overflow: hidden;\n    -ms-touch-action: none;\n}\n\n.leaflet-tile,\n.leaflet-marker-icon,\n.leaflet-marker-shadow {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -webkit-user-drag: none;\n    -ms-user-drag: none;\n}\n\n.leaflet-marker-icon,\n.leaflet-marker-shadow {\n    display: block;\n}\n/* map is broken in FF if you have max-width: 100% on tiles */\n.leaflet-container img {\n    max-width: none !important;\n}\n/* stupid Android 2 doesn't understand \"max-width: none\" properly */\n.leaflet-container img.leaflet-image-layer {\n    max-width: 15000px !important;\n}\n.leaflet-tile {\n    filter: inherit;\n    visibility: hidden;\n}\n.leaflet-tile-loaded,\n.leaflet-tile.leaflet-tile-loaded {\n    visibility: inherit;\n}\n.leaflet-zoom-box {\n    width: 0;\n    height: 0;\n}\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\n.leaflet-overlay-pane svg {\n    -moz-user-select: none;\n}\n\n.leaflet-tile-pane    { z-index: 2; }\n.leaflet-objects-pane { z-index: 3; }\n.leaflet-overlay-pane { z-index: 4; }\n.leaflet-shadow-pane  { z-index: 5; }\n.leaflet-marker-pane  { z-index: 6; }\n.leaflet-popup-pane   { z-index: 7; }\n\n\n/* control positioning */\n\n.leaflet-control {\n    position: relative;\n    z-index: 7;\n    pointer-events: auto;\n}\n.leaflet-top,\n.leaflet-bottom {\n    position: absolute;\n    z-index: 1000;\n    pointer-events: none;\n}\n.leaflet-top {\n    top: 0;\n}\n.leaflet-right {\n    right: 0;\n}\n.leaflet-bottom {\n    bottom: 0;\n}\n.leaflet-left {\n    left: 0;\n}\n.leaflet-control {\n    float: left;\n    clear: both;\n}\n.leaflet-right .leaflet-control {\n    float: right;\n}\n.leaflet-top .leaflet-control {\n    margin-top: 10px;\n}\n.leaflet-bottom .leaflet-control {\n    margin-bottom: 10px;\n}\n.leaflet-left .leaflet-control {\n    margin-left: 10px;\n}\n.leaflet-right .leaflet-control {\n    margin-right: 10px;\n}\n\n\n/* zoom and fade animations */\n\n.leaflet-fade-anim .leaflet-tile,\n.leaflet-fade-anim .leaflet-popup {\n    opacity: 0;\n    -webkit-transition: opacity 0.2s linear;\n    -moz-transition: opacity 0.2s linear;\n    -ms-transition: opacity 0.2s linear;\n    -o-transition: opacity 0.2s linear;\n    transition: opacity 0.2s linear;\n}\n.leaflet-fade-anim .leaflet-tile-loaded,\n.leaflet-fade-anim .leaflet-tile.leaflet-tile-loaded,\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\n    opacity: 1;\n}\n\n.leaflet-zoom-anim .leaflet-zoom-animated {\n    -webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\n    -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\n    -ms-transition:    -ms-transform 0.25s cubic-bezier(0,0,0.25,1);\n    -o-transition:      -o-transform 0.25s cubic-bezier(0,0,0.25,1);\n    transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\n}\n.leaflet-zoom-anim .leaflet-tile,\n.leaflet-pan-anim .leaflet-tile,\n.leaflet-touching .leaflet-zoom-animated {\n    -webkit-transition: none;\n    -moz-transition: none;\n    -ms-transition: none;\n    -o-transition: none;\n    transition: none;\n}\n\n.leaflet-zoom-anim .leaflet-zoom-hide {\n    visibility: hidden;\n}\n\n\n/* cursors */\n\n.leaflet-clickable {\n    cursor: pointer;\n}\n.leaflet-container {\n    cursor: -webkit-grab;\n    cursor:    -moz-grab;\n    cursor:     -ms-grab;\n}\n.leaflet-popup-pane,\n.leaflet-control {\n    cursor: auto;\n}\n.leaflet-dragging,\n.leaflet-dragging .leaflet-clickable,\n.leaflet-dragging .leaflet-container {\n    cursor: move;\n    cursor: -webkit-grabbing;\n    cursor:    -moz-grabbing;\n    cursor:    -ms-grabbing;\n}\n\n\n/* visual tweaks */\n\n.leaflet-container {\n    background: #ddd;\n    outline: 0;\n}\n.leaflet-container a {\n    color: #0078A8;\n}\n.leaflet-container a.leaflet-active {\n    outline: 2px solid orange;\n}\n.leaflet-zoom-box {\n    border: 2px dotted #05f;\n    background: white;\n    opacity: 0.5;\n}\n\n\n/* general typography */\n.leaflet-container {\n    font: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n}\n\n\n/* general toolbar styles */\n\n.widgetBody .leaflet-bar {\n    box-shadow: 0 1px 7px rgba(0,0,0,0.65);\n    -webkit-border-radius: 4px;\n    border-radius: 4px;\n}\n.leaflet-bar a, .leaflet-bar a:hover {\n    background-color: #fff;\n    border-bottom: 1px solid #ccc;\n    width: 26px;\n    height: 26px;\n    line-height: 26px;\n    display: block;\n    text-align: center;\n    text-decoration: none;\n    color: black;\n}\n.leaflet-bar a,\n.leaflet-control-layers-toggle {\n    background-position: 50% 50%;\n    background-repeat: no-repeat;\n    display: block;\n}\n.leaflet-bar a:hover {\n    background-color: #f4f4f4;\n}\n.leaflet-bar a:first-child {\n    -webkit-border-top-left-radius: 4px;\n    border-top-left-radius: 4px;\n    -webkit-border-top-right-radius: 4px;\n    border-top-right-radius: 4px;\n}\n.leaflet-bar a:last-child {\n    -webkit-border-bottom-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n    -webkit-border-bottom-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n    border-bottom: none;\n}\n.leaflet-bar a.leaflet-disabled {\n    cursor: default;\n    background-color: #f4f4f4;\n    color: #bbb;\n}\n\n.leaflet-touch .leaflet-bar {\n    -webkit-border-radius: 10px;\n    border-radius: 10px;\n}\n.leaflet-touch .leaflet-bar a {\n    width: 30px;\n    height: 30px;\n}\n.leaflet-touch .leaflet-bar a:first-child {\n    -webkit-border-top-left-radius: 7px;\n    border-top-left-radius: 7px;\n    -webkit-border-top-right-radius: 7px;\n    border-top-right-radius: 7px;\n}\n.leaflet-touch .leaflet-bar a:last-child {\n    -webkit-border-bottom-left-radius: 7px;\n    border-bottom-left-radius: 7px;\n    -webkit-border-bottom-right-radius: 7px;\n    border-bottom-right-radius: 7px;\n    border-bottom: none;\n}\n\n\n/* zoom control */\n\n.leaflet-control-zoom-in {\n    font: bold 18px 'Lucida Console', Monaco, monospace;\n}\n.leaflet-control-zoom-out {\n    font: bold 22px 'Lucida Console', Monaco, monospace;\n}\n\n.leaflet-touch .leaflet-control-zoom-in {\n    font-size: 22px;\n    line-height: 30px;\n}\n.leaflet-touch .leaflet-control-zoom-out {\n    font-size: 28px;\n    line-height: 30px;\n}\n\n\n/* layers control */\n\n.widgetBody .leaflet-control-layers {\n    box-shadow: 0 1px 7px rgba(0,0,0,0.4);\n    background: #f8f8f9;\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n}\n.leaflet-control-layers-toggle {\n    background-image: url(images/layers.png);\n    width: 36px;\n    height: 36px;\n}\n.leaflet-retina .leaflet-control-layers-toggle {\n    background-image: url(images/layers-2x.png);\n    background-size: 26px 26px;\n}\n.leaflet-touch .leaflet-control-layers-toggle {\n    width: 44px;\n    height: 44px;\n}\n.leaflet-control-layers .leaflet-control-layers-list,\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\n    display: none;\n}\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\n    display: block;\n    position: relative;\n}\n.leaflet-control-layers-expanded {\n    padding: 6px 10px 6px 6px;\n    color: #333;\n    background: #fff;\n}\n.leaflet-control-layers-selector {\n    margin-top: 2px;\n    position: relative;\n    top: 1px;\n}\n.leaflet-control-layers label {\n    display: block;\n}\n.leaflet-control-layers-separator {\n    height: 0;\n    border-top: 1px solid #ddd;\n    margin: 5px -10px 5px -6px;\n}\n\n\n/* attribution and scale controls */\n\n.widgetBody .leaflet-container .leaflet-control-attribution {\n    background-color: rgba(255, 255, 255, 0.7);\n    box-shadow: 0 0 5px #bbb;\n    margin: 0;\n}\n.leaflet-control-attribution,\n.leaflet-control-scale-line {\n    padding: 0 5px;\n    color: #333;\n}\n.leaflet-container .leaflet-control-attribution,\n.leaflet-container .leaflet-control-scale {\n    font-size: 11px;\n}\n.leaflet-left .leaflet-control-scale {\n    margin-left: 5px;\n}\n.leaflet-bottom .leaflet-control-scale {\n    margin-bottom: 5px;\n}\n.widgetBody .leaflet-control-scale-line {\n    border: 2px solid #777;\n    border-top: none;\n    color: black;\n    line-height: 1.1;\n    padding: 2px 5px 1px;\n    font-size: 11px;\n    text-shadow: 1px 1px 1px #fff;\n    background-color: rgba(255, 255, 255, 0.5);\n    box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.2);\n    white-space: nowrap;\n    overflow: hidden;\n}\n.widgetBody .leaflet-control-scale-line:not(:first-child) {\n    border-top: 2px solid #777;\n    border-bottom: none;\n    margin-top: -2px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\n    border-bottom: 2px solid #777;\n}\n\n.leaflet-touch .leaflet-control-attribution,\n.leaflet-touch .leaflet-control-layers,\n.widgetBody .leaflet-touch .leaflet-control-zoom {\n    box-shadow: none;\n}\n.leaflet-touch .leaflet-control-layers,\n.leaflet-touch .leaflet-control-zoom {\n    border: 4px solid rgba(0,0,0,0.3);\n}\n\n\n/* popup */\n\n.leaflet-popup {\n    position: absolute;\n    text-align: center;\n}\n.leaflet-popup-content-wrapper {\n    padding: 1px;\n    text-align: left;\n    -webkit-border-radius: 12px;\n    border-radius: 12px;\n}\n.leaflet-popup-content {\n    margin: 13px 19px;\n    line-height: 1.4;\n}\n.leaflet-popup-content p {\n    margin: 18px 0;\n}\n.leaflet-popup-tip-container {\n    margin: 0 auto;\n    width: 40px;\n    height: 20px;\n    position: relative;\n    overflow: hidden;\n}\n.leaflet-popup-tip {\n    width: 17px;\n    height: 17px;\n    padding: 1px;\n\n    margin: -10px auto 0;\n\n    -webkit-transform: rotate(45deg);\n    -moz-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    -o-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n.widgetBody .leaflet-popup-content-wrapper, .widgetBody .leaflet-popup-tip {\n    background: white;\n\n    box-shadow: 0 3px 14px rgba(0,0,0,0.4);\n}\n.leaflet-container a.leaflet-popup-close-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 4px 4px 0 0;\n    text-align: center;\n    width: 18px;\n    height: 14px;\n    font: 16px/14px Tahoma, Verdana, sans-serif;\n    color: #c3c3c3;\n    text-decoration: none;\n    font-weight: bold;\n    background: transparent;\n}\n.leaflet-container a.leaflet-popup-close-button:hover {\n    color: #999;\n}\n.leaflet-popup-scrolled {\n    overflow: auto;\n    border-bottom: 1px solid #ddd;\n    border-top: 1px solid #ddd;\n}\n\n\n/* div icon */\n\n.leaflet-div-icon {\n    background: #fff;\n    border: 1px solid #666;\n}\n.leaflet-editing-icon {\n    -webkit-border-radius: 2px;\n    border-radius: 2px;\n}\n\n/* L.GeoSearch required styles */\n\n.leaflet-center {\n    width: 40%;\n    left: 0;\n    right: 0;\n    position: absolute;\n    margin:auto;\n}\n.leaflet-control-geosearch, .leaflet-control-geosearch ul {\n    border-radius: 7px;\n    background: none repeat scroll 0 0 rgba(0, 0, 0, 0.25);\n    margin: 10px 0 0 0;\n    padding: 5px;\n    width: 100%;\n    height: auto;\n}\n.leaflet-control-geosearch-msg ul {\n    list-style: none;\n    display: none;\n    height: auto;\n    background: none;\n    padding: 0;\n}\n.leaflet-control-geosearch ul li {\n    background: none repeat scroll 0 0 rgba(255, 255, 255, 0.75);\n    border-radius: 4px;\n    margin: 2px 0;\n    padding: 4px;\n    font: 12px arial;\n    text-indent: 4px;\n}\n.leaflet-container .leaflet-control-geosearch input {\n    width: 100%;\n    height: 28px;\n    padding: 0;\n    text-indent: 8px;\n    background: rgba(255, 255, 255, 0.75);\n    border-radius: 4px;\n    border: none;\n    margin-bottom: 0;\n}","order":1,"uploadDate":"2016-09-27 19:57:57.885"}],"libs":["lodash.min.js","leaflet.js","topojson.js","geojson-utils.js","d3.v3.min.js","test_region_level3.js","test_region_level2.js","test_region_level1.js"],"objectFieldTypes":["NUMBER","MONEY","ATTRIBUTE","INTEGER"],"controls":["TimeControl","UberStyle","DirtyDataIndicator","Color","FiltersIndicator","Undo","Info","TimePlayer","Filters","Defaults","Bookmark","NoDataIndicator","TimeTable","Share","Download"],"variables":[{"name":"Chart Name","type":"string","descr":"","defaultValue":"","colorMetric":false,"colorNumb":0,"required":false},{"name":"Chart Description","type":"string","descr":"","defaultValue":"","colorMetric":false,"colorNumb":0,"required":false},{"name":"Color","type":"metric","descr":"","attributeType":["MONEY","INTEGER","NUMBER"],"defaultValue":"[{\"name\":\"count\",\"colorConfig\":{\"autoShowColorLegend\":false}}]","colorMetric":false,"colorNumb":8,"metricType":"color","legendType":"palette","colors":"[]","colorSet":"ZoomSequential","required":false},{"name":"region","type":"group","descr":"","attributeType":["ATTRIBUTE"],"defaultValue":"","colorMetric":false,"colorNumb":0,"groupType":"attribute","required":false}]}